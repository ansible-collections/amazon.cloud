#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright: (c) 2022, Ansible Project
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# template: header.j2
# This module is autogenerated using the ansible.content_builder.
# See: https://github.com/ansible-community/ansible.content_builder


DOCUMENTATION = r"""
module: rds_db_instance
short_description: Creates and manages resource creates an Amazon DB instance
description:
- Creates and manages resource creates an Amazon DB instance.
- The new DB instance can be an RDS DB instance, or it can be a DB instance in an
    Aurora DB cluster.
options:
    allocated_storage:
        aliases:
        - AllocatedStorage
        description:
        - The amount of storage (in gigabytes) to be initially allocated for the database
            instance.
        type: str
    allow_major_version_upgrade:
        aliases:
        - AllowMajorVersionUpgrade
        description:
        - A value that indicates whether major version upgrades are allowed.
        - Changing this parameter doesnt result in an outage and the change is asynchronously
            applied as soon as possible.
        type: bool
    associated_roles:
        aliases:
        - AssociatedRoles
        description:
        - The AWS Identity and Access Management (IAM) roles associated with the DB
            instance.
        elements: dict
        suboptions:
            feature_name:
                aliases:
                - FeatureName
                description:
                - The name of the feature associated with the AWS Identity and Access
                    Management (IAM) role.
                - IAM roles that are associated with a DB instance grant permission
                    for the DB instance to access other AWS services on your behalf.
                type: str
            role_arn:
                aliases:
                - RoleArn
                description:
                - The Amazon Resource Name (ARN) of the IAM role that is associated
                    with the DB instance.
                type: str
        type: list
    auto_minor_version_upgrade:
        aliases:
        - AutoMinorVersionUpgrade
        description:
        - A value that indicates whether minor engine upgrades are applied automatically
            to the DB instance during the maintenance window.
        - By default, minor engine upgrades are applied automatically.
        type: bool
    availability_zone:
        aliases:
        - AvailabilityZone
        description:
        - The Availability Zone (AZ) where the database will be created.
        - For information on AWS Regions and Availability Zones.
        type: str
    backup_retention_period:
        aliases:
        - BackupRetentionPeriod
        default: 1
        description:
        - The number of days for which automated backups are retained.
        - Setting this parameter to a positive number enables backups.
        - Setting this parameter to 0 disables automated backups.
        type: int
    ca_certificate_identifier:
        aliases:
        - CACertificateIdentifier
        description:
        - The identifier of the CA certificate for this DB instance.
        type: str
    certificate_rotation_restart:
        aliases:
        - CertificateRotationRestart
        description:
        - A value that indicates whether the DB instance is restarted when you rotate
            your SSL/TLS certificate.
        - By default, the DB instance is restarted when you rotate your SSL/TLS certificate.
        - The certificate is not updated until the DB instance is restarted.
        - If you are using SSL/TLS to connect to the DB instance, follow the appropriate
            instructions for your DB engine to rotate your SSL/TLS certificate.
        - This setting doesnt apply to RDS Custom.
        type: bool
    character_set_name:
        aliases:
        - CharacterSetName
        description:
        - For supported engines, indicates that the DB instance should be associated
            with the specified character set.
        type: str
    copy_tags_to_snapshot:
        aliases:
        - CopyTagsToSnapshot
        description:
        - A value that indicates whether to copy tags from the DB instance to snapshots
            of the DB instance.
        - By default, tags are not copied.
        type: bool
    custom_iam_instance_profile:
        aliases:
        - CustomIAMInstanceProfile
        description:
        - The instance profile associated with the underlying Amazon EC2 instance
            of an RDS Custom DB instance.
        - The instance profile must meet the following requirements:.
        - '* The profile must exist in your account.'
        - '* The profile must have an IAM role that Amazon EC2 has permissions to
            assume.'
        - '* The instance profile name and the associated IAM role name must start
            with the prefix AWSRDSCustom .'
        - For the list of permissions required for the IAM role, see Configure IAM
            and your VPC in the Amazon RDS User Guide .
        - This setting is required for RDS Custom.
        type: str
    db_cluster_identifier:
        aliases:
        - DBClusterIdentifier
        description:
        - The identifier of the DB cluster that the instance will belong to.
        type: str
    db_cluster_snapshot_identifier:
        aliases:
        - DBClusterSnapshotIdentifier
        description:
        - The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore
            from.
        - For more information on Multi-AZ DB clusters, see Multi-AZ deployments with
            two readable standby DB instances in the Amazon RDS User Guide .
        - Constraints:.
        - '* Must match the identifier of an existing Multi-AZ DB cluster snapshot.'
        - '* Cant be specified when DBSnapshotIdentifier is specified.'
        - '* Must be specified when DBSnapshotIdentifier isnt specified.'
        - '* If you are restoring from a shared manual Multi-AZ DB cluster snapshot,
            the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.'
        - '* Cant be the identifier of an Aurora DB cluster snapshot.'
        - '* Cant be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.'
        type: str
    db_instance_class:
        aliases:
        - DBInstanceClass
        description:
        - The compute and memory capacity of the DB instance, for example, db.m4.large.
        - Not all DB instance classes are available in all AWS Regions, or for all
            database engines.
        type: str
    db_instance_identifier:
        aliases:
        - DBInstanceIdentifier
        description:
        - A name for the DB instance.
        - If you specify a name, AWS CloudFormation converts it to lowercase.
        - If you dont specify a name, AWS CloudFormation generates a unique physical
            ID and uses that ID for the DB instance.
        type: str
    db_name:
        aliases:
        - DBName
        description:
        - The meaning of this parameter differs according to the database engine you
            use.
        type: str
    db_parameter_group_name:
        aliases:
        - DBParameterGroupName
        description:
        - The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup
            resource created in the template.
        type: str
    db_security_groups:
        aliases:
        - DBSecurityGroups
        description:
        - A list of the DB security groups to assign to the DB instance.
        - The list can include both the name of existing DB security groups or references
            to AWS::RDS::DBSecurityGroup resources created in the template.
        elements: str
        type: list
    db_snapshot_identifier:
        aliases:
        - DBSnapshotIdentifier
        description:
        - The name or Amazon Resource Name (ARN) of the DB snapshot thats used to
            restore the DB instance.
        - If youre restoring from a shared manual DB snapshot, you must specify the
            ARN of the snapshot.
        type: str
    db_subnet_group_name:
        aliases:
        - DBSubnetGroupName
        description:
        - A DB subnet group to associate with the DB instance.
        - If you update this value, the new subnet group must be a subnet group in
            a new VPC.
        type: str
    delete_automated_backups:
        aliases:
        - DeleteAutomatedBackups
        description:
        - A value that indicates whether to remove automated backups immediately after
            the DB instance is deleted.
        - This parameter isnt case-sensitive.
        - The default is to remove automated backups immediately after the DB instance
            is deleted.
        type: bool
    deletion_protection:
        aliases:
        - DeletionProtection
        description:
        - A value that indicates whether the DB instance has deletion protection enabled.
        - The database cant be deleted when deletion protection is enabled.
        - By default, deletion protection is disabled.
        type: bool
    domain:
        aliases:
        - Domain
        description:
        - The Active Directory directory ID to create the DB instance in.
        - Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances
            can be created in an Active Directory Domain.
        type: str
    domain_iam_role_name:
        aliases:
        - DomainIAMRoleName
        description:
        - Specify the name of the IAM role to be used when making API calls to the
            Directory Service.
        type: str
    enable_cloudwatch_logs_exports:
        aliases:
        - EnableCloudwatchLogsExports
        description:
        - The list of log types that need to be enabled for exporting to CloudWatch
            Logs.
        - The values in the list depend on the DB engine being used.
        elements: str
        type: list
    enable_iam_database_authentication:
        aliases:
        - EnableIAMDatabaseAuthentication
        description:
        - A value that indicates whether to enable mapping of AWS Identity and Access
            Management (IAM) accounts to database accounts.
        - By default, mapping is disabled.
        type: bool
    enable_performance_insights:
        aliases:
        - EnablePerformanceInsights
        description:
        - A value that indicates whether to enable Performance Insights for the DB
            instance.
        type: bool
    engine:
        aliases:
        - Engine
        description:
        - The name of the database engine that you want to use for this DB instance.
        type: str
    engine_version:
        aliases:
        - EngineVersion
        description:
        - The version number of the database engine to use.
        type: str
    force:
        default: false
        description:
        - Cancel IN_PROGRESS and PENDING resource requestes.
        - Because you can only perform a single operation on a given resource at a
            time, there might be cases where you need to cancel the current resource
            operation to make the resource available so that another operation may
            be performed on it.
        type: bool
    iops:
        aliases:
        - Iops
        description:
        - The number of I/O operations per second (IOPS) that the database provisions.
        type: int
    kms_key_id:
        aliases:
        - KmsKeyId
        description:
        - The ARN of the AWS Key Management Service (AWS KMS) master key thats used
            to encrypt the DB instance.
        type: str
    license_model:
        aliases:
        - LicenseModel
        description:
        - License model information for this DB instance.
        type: str
    manage_master_user_password:
        aliases:
        - ManageMasterUserPassword
        description:
        - A value that indicates whether to manage the master user password with AWS
            Secrets Manager.
        type: bool
    master_user_password:
        aliases:
        - MasterUserPassword
        description:
        - The password for the master user.
        type: str
    master_username:
        aliases:
        - MasterUsername
        description:
        - The master user name for the DB instance.
        type: str
    max_allocated_storage:
        aliases:
        - MaxAllocatedStorage
        description:
        - The upper limit to which Amazon RDS can automatically scale the storage
            of the DB instance.
        type: int
    monitoring_interval:
        aliases:
        - MonitoringInterval
        default: 0
        description:
        - The interval, in seconds, between points when Enhanced Monitoring metrics
            are collected for the DB instance.
        - To disable collecting Enhanced Monitoring metrics, specify 0.
        - The default is 0.
        type: int
    monitoring_role_arn:
        aliases:
        - MonitoringRoleArn
        description:
        - The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
            to Amazon CloudWatch Logs.
        type: str
    multi_az:
        aliases:
        - MultiAZ
        description:
        - Specifies whether the database instance is a multiple Availability Zone
            deployment.
        type: bool
    nchar_character_set_name:
        aliases:
        - NcharCharacterSetName
        description:
        - The name of the NCHAR character set for the Oracle DB instance.
        - This parameter doesnt apply to RDS Custom.
        type: str
    network_type:
        aliases:
        - NetworkType
        description:
        - The network type of the DB cluster.
        type: str
    option_group_name:
        aliases:
        - OptionGroupName
        description:
        - Indicates that the DB instance should be associated with the specified option
            group.
        type: str
    performance_insights_kms_key_id:
        aliases:
        - PerformanceInsightsKMSKeyId
        description:
        - The AWS KMS key identifier for encryption of Performance Insights data.
        - The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or
            the KMS key alias for the KMS encryption key.
        type: str
    performance_insights_retention_period:
        aliases:
        - PerformanceInsightsRetentionPeriod
        description:
        - The amount of time, in days, to retain Performance Insights data.
        - Valid values are 7 or 731 (2 years).
        type: int
    port:
        aliases:
        - Port
        description:
        - The port number on which the database accepts connections.
        type: str
    preferred_backup_window:
        aliases:
        - PreferredBackupWindow
        description:
        - The daily time range during which automated backups are created if automated
            backups are enabled, using the BackupRetentionPeriod parameter.
        type: str
    preferred_maintenance_window:
        aliases:
        - PreferredMaintenanceWindow
        description:
        - he weekly time range during which system maintenance can occur, in Universal
            Coordinated Time (UTC).
        type: str
    processor_features:
        aliases:
        - ProcessorFeatures
        description:
        - The number of CPU cores and the number of threads per core for the DB instance
            class of the DB instance.
        elements: dict
        suboptions:
            name:
                aliases:
                - Name
                choices:
                - coreCount
                - threadsPerCore
                description:
                - The name of the processor feature.
                - Valid names are coreCount and threadsPerCore.
                type: str
            value:
                aliases:
                - Value
                description:
                - The value of a processor feature name.
                type: str
        type: list
    promotion_tier:
        aliases:
        - PromotionTier
        default: 1
        description:
        - A value that specifies the order in which an Aurora Replica is promoted
            to the primary instance after a failure of the existing primary instance.
        type: int
    publicly_accessible:
        aliases:
        - PubliclyAccessible
        description:
        - Indicates whether the DB instance is an internet-facing instance.
        - If you specify true, AWS CloudFormation creates an instance with a publicly
            resolvable DNS name, which resolves to a public IP address.
        - If you specify false, AWS CloudFormation creates an internal instance with
            a DNS name that resolves to a private IP address.
        type: bool
    purge_tags:
        default: true
        description:
        - Remove tags not listed in I(tags).
        type: bool
    replica_mode:
        aliases:
        - ReplicaMode
        description:
        - The open mode of an Oracle read replica.
        - The default is open-read-only.
        type: str
    restore_time:
        aliases:
        - RestoreTime
        description:
        - The date and time to restore from.
        type: str
    source_db_cluster_identifier:
        aliases:
        - SourceDBClusterIdentifier
        description:
        - The identifier of the Multi-AZ DB cluster that will act as the source for
            the read replica.
        - Each DB cluster can have up to 15 read replicas.
        type: str
    source_db_instance_automated_backups_arn:
        aliases:
        - SourceDBInstanceAutomatedBackupsArn
        description:
        - The Amazon Resource Name (ARN) of the replicated automated backups from
            which to restore.
        type: str
    source_db_instance_identifier:
        aliases:
        - SourceDBInstanceIdentifier
        description:
        - If you want to create a Read Replica DB instance, specify the ID of the
            source DB instance.
        - Each DB instance can have a limited number of Read Replicas.
        type: str
    source_dbi_resource_id:
        aliases:
        - SourceDbiResourceId
        description:
        - The resource ID of the source DB instance from which to restore.
        type: str
    source_region:
        aliases:
        - SourceRegion
        description:
        - The ID of the region that contains the source DB instance for the Read Replica.
        type: str
    state:
        choices:
        - present
        - absent
        - list
        - describe
        - get
        default: present
        description:
        - Goal state for resource.
        - I(state=present) creates the resource if it doesn't exist, or updates to
            the provided state if the resource already exists.
        - I(state=absent) ensures an existing instance is deleted.
        - I(state=list) get all the existing resources.
        - I(state=describe) or I(state=get) retrieves information on an existing resource.
        type: str
    storage_encrypted:
        aliases:
        - StorageEncrypted
        description:
        - A value that indicates whether the DB instance is encrypted.
        - By default, it isnt encrypted.
        type: bool
    storage_throughput:
        aliases:
        - StorageThroughput
        description:
        - Specifies the storage throughput for the DB instance.
        type: int
    storage_type:
        aliases:
        - StorageType
        description:
        - Specifies the storage type to be associated with the DB instance.
        type: str
    tags:
        aliases:
        - Tags
        - resource_tags
        description:
        - A dict of tags to apply to the resource.
        - To remove all tags set I(tags={}) and I(purge_tags=true).
        type: dict
    tde_credential_arn:
        aliases:
        - TdeCredentialArn
        description:
        - The ARN from the key store with which to associate the instance for TDE
            encryption.
        type: str
    tde_credential_password:
        aliases:
        - TdeCredentialPassword
        description:
        - The password for the given ARN from the key store in order to access the
            device.
        type: str
    timezone:
        aliases:
        - Timezone
        description:
        - The time zone of the DB instance.
        - The time zone parameter is currently supported only by Microsoft SQL Server.
        type: str
    use_default_processor_features:
        aliases:
        - UseDefaultProcessorFeatures
        description:
        - A value that indicates whether the DB instance class of the DB instance
            uses its default processor features.
        type: bool
    use_latest_restorable_time:
        aliases:
        - UseLatestRestorableTime
        description:
        - A value that indicates whether the DB instance is restored from the latest
            backup time.
        - By default, the DB instance isnt restored from the latest backup time.
        type: bool
    vpc_security_groups:
        aliases:
        - VPCSecurityGroups
        description:
        - A list of the VPC security group IDs to assign to the DB instance.
        - The list can include both the physical IDs of existing VPC security groups
            and references to AWS::EC2::SecurityGroup resources created in the template.
        elements: str
        type: list
    wait:
        default: false
        description:
        - Wait for operation to complete before returning.
        type: bool
    wait_timeout:
        default: 320
        description:
        - How many seconds to wait for an operation to complete before timing out.
        type: int
author: Ansible Cloud Team (@ansible-collections)
version_added: 0.3.0
extends_documentation_fragment:
- amazon.aws.aws
- amazon.aws.ec2
- amazon.cloud.boto3
"""

EXAMPLES = r"""
"""

RETURN = r"""
result:
    description:
        - When I(state=list), it is a list containing dictionaries of resource information.
        - Otherwise, it is a dictionary of resource information.
        - When I(state=absent), it is an empty dictionary.
    returned: always
    type: complex
    contains:
        identifier:
            description: The unique identifier of the resource.
            type: str
        properties:
            description: The resource properties.
            type: dict
"""


from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    AnsibleAmazonCloudModule,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    CloudControlResource,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    ansible_dict_to_boto3_tag_list,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    scrub_none_parameters,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import map_key_to_alias


def main():
    argument_spec = dict(
        state=dict(
            type="str",
            choices=["present", "absent", "list", "describe", "get"],
            default="present",
        ),
    )

    argument_spec["allocated_storage"] = {
        "type": "str",
        "aliases": ["AllocatedStorage"],
    }
    argument_spec["allow_major_version_upgrade"] = {
        "type": "bool",
        "aliases": ["AllowMajorVersionUpgrade"],
    }
    argument_spec["associated_roles"] = {
        "type": "list",
        "elements": "dict",
        "options": {
            "feature_name": {"type": "str", "aliases": ["FeatureName"]},
            "role_arn": {"type": "str", "aliases": ["RoleArn"]},
        },
        "aliases": ["AssociatedRoles"],
    }
    argument_spec["auto_minor_version_upgrade"] = {
        "type": "bool",
        "aliases": ["AutoMinorVersionUpgrade"],
    }
    argument_spec["availability_zone"] = {
        "type": "str",
        "aliases": ["AvailabilityZone"],
    }
    argument_spec["backup_retention_period"] = {
        "type": "int",
        "default": 1,
        "aliases": ["BackupRetentionPeriod"],
    }
    argument_spec["ca_certificate_identifier"] = {
        "type": "str",
        "aliases": ["CACertificateIdentifier"],
    }
    argument_spec["certificate_rotation_restart"] = {
        "type": "bool",
        "aliases": ["CertificateRotationRestart"],
    }
    argument_spec["character_set_name"] = {
        "type": "str",
        "aliases": ["CharacterSetName"],
    }
    argument_spec["copy_tags_to_snapshot"] = {
        "type": "bool",
        "aliases": ["CopyTagsToSnapshot"],
    }
    argument_spec["custom_iam_instance_profile"] = {
        "type": "str",
        "aliases": ["CustomIAMInstanceProfile"],
    }
    argument_spec["db_cluster_identifier"] = {
        "type": "str",
        "aliases": ["DBClusterIdentifier"],
    }
    argument_spec["db_cluster_snapshot_identifier"] = {
        "type": "str",
        "aliases": ["DBClusterSnapshotIdentifier"],
    }
    argument_spec["db_instance_class"] = {"type": "str", "aliases": ["DBInstanceClass"]}
    argument_spec["db_instance_identifier"] = {
        "type": "str",
        "aliases": ["DBInstanceIdentifier"],
    }
    argument_spec["db_name"] = {"type": "str", "aliases": ["DBName"]}
    argument_spec["db_parameter_group_name"] = {
        "type": "str",
        "aliases": ["DBParameterGroupName"],
    }
    argument_spec["db_security_groups"] = {
        "type": "list",
        "elements": "str",
        "aliases": ["DBSecurityGroups"],
    }
    argument_spec["db_snapshot_identifier"] = {
        "type": "str",
        "aliases": ["DBSnapshotIdentifier"],
    }
    argument_spec["db_subnet_group_name"] = {
        "type": "str",
        "aliases": ["DBSubnetGroupName"],
    }
    argument_spec["delete_automated_backups"] = {
        "type": "bool",
        "aliases": ["DeleteAutomatedBackups"],
    }
    argument_spec["deletion_protection"] = {
        "type": "bool",
        "aliases": ["DeletionProtection"],
    }
    argument_spec["domain"] = {"type": "str", "aliases": ["Domain"]}
    argument_spec["domain_iam_role_name"] = {
        "type": "str",
        "aliases": ["DomainIAMRoleName"],
    }
    argument_spec["enable_cloudwatch_logs_exports"] = {
        "type": "list",
        "elements": "str",
        "aliases": ["EnableCloudwatchLogsExports"],
    }
    argument_spec["enable_iam_database_authentication"] = {
        "type": "bool",
        "aliases": ["EnableIAMDatabaseAuthentication"],
    }
    argument_spec["enable_performance_insights"] = {
        "type": "bool",
        "aliases": ["EnablePerformanceInsights"],
    }
    argument_spec["engine"] = {"type": "str", "aliases": ["Engine"]}
    argument_spec["engine_version"] = {"type": "str", "aliases": ["EngineVersion"]}
    argument_spec["manage_master_user_password"] = {
        "type": "bool",
        "aliases": ["ManageMasterUserPassword"],
    }
    argument_spec["iops"] = {"type": "int", "aliases": ["Iops"]}
    argument_spec["kms_key_id"] = {"type": "str", "aliases": ["KmsKeyId"]}
    argument_spec["license_model"] = {"type": "str", "aliases": ["LicenseModel"]}
    argument_spec["master_username"] = {"type": "str", "aliases": ["MasterUsername"]}
    argument_spec["master_user_password"] = {
        "type": "str",
        "aliases": ["MasterUserPassword"],
    }
    argument_spec["max_allocated_storage"] = {
        "type": "int",
        "aliases": ["MaxAllocatedStorage"],
    }
    argument_spec["monitoring_interval"] = {
        "type": "int",
        "default": 0,
        "aliases": ["MonitoringInterval"],
    }
    argument_spec["monitoring_role_arn"] = {
        "type": "str",
        "aliases": ["MonitoringRoleArn"],
    }
    argument_spec["multi_az"] = {"type": "bool", "aliases": ["MultiAZ"]}
    argument_spec["nchar_character_set_name"] = {
        "type": "str",
        "aliases": ["NcharCharacterSetName"],
    }
    argument_spec["network_type"] = {"type": "str", "aliases": ["NetworkType"]}
    argument_spec["option_group_name"] = {"type": "str", "aliases": ["OptionGroupName"]}
    argument_spec["performance_insights_kms_key_id"] = {
        "type": "str",
        "aliases": ["PerformanceInsightsKMSKeyId"],
    }
    argument_spec["performance_insights_retention_period"] = {
        "type": "int",
        "aliases": ["PerformanceInsightsRetentionPeriod"],
    }
    argument_spec["port"] = {"type": "str", "aliases": ["Port"]}
    argument_spec["preferred_backup_window"] = {
        "type": "str",
        "aliases": ["PreferredBackupWindow"],
    }
    argument_spec["preferred_maintenance_window"] = {
        "type": "str",
        "aliases": ["PreferredMaintenanceWindow"],
    }
    argument_spec["processor_features"] = {
        "type": "list",
        "elements": "dict",
        "options": {
            "name": {
                "type": "str",
                "choices": ["coreCount", "threadsPerCore"],
                "aliases": ["Name"],
            },
            "value": {"type": "str", "aliases": ["Value"]},
        },
        "aliases": ["ProcessorFeatures"],
    }
    argument_spec["promotion_tier"] = {
        "type": "int",
        "default": 1,
        "aliases": ["PromotionTier"],
    }
    argument_spec["publicly_accessible"] = {
        "type": "bool",
        "aliases": ["PubliclyAccessible"],
    }
    argument_spec["replica_mode"] = {"type": "str", "aliases": ["ReplicaMode"]}
    argument_spec["restore_time"] = {"type": "str", "aliases": ["RestoreTime"]}
    argument_spec["source_db_cluster_identifier"] = {
        "type": "str",
        "aliases": ["SourceDBClusterIdentifier"],
    }
    argument_spec["source_dbi_resource_id"] = {
        "type": "str",
        "aliases": ["SourceDbiResourceId"],
    }
    argument_spec["source_db_instance_automated_backups_arn"] = {
        "type": "str",
        "aliases": ["SourceDBInstanceAutomatedBackupsArn"],
    }
    argument_spec["source_db_instance_identifier"] = {
        "type": "str",
        "aliases": ["SourceDBInstanceIdentifier"],
    }
    argument_spec["source_region"] = {"type": "str", "aliases": ["SourceRegion"]}
    argument_spec["storage_encrypted"] = {
        "type": "bool",
        "aliases": ["StorageEncrypted"],
    }
    argument_spec["storage_type"] = {"type": "str", "aliases": ["StorageType"]}
    argument_spec["storage_throughput"] = {
        "type": "int",
        "aliases": ["StorageThroughput"],
    }
    argument_spec["tags"] = {"type": "dict", "aliases": ["Tags", "resource_tags"]}
    argument_spec["tde_credential_arn"] = {
        "type": "str",
        "aliases": ["TdeCredentialArn"],
    }
    argument_spec["tde_credential_password"] = {
        "type": "str",
        "aliases": ["TdeCredentialPassword"],
    }
    argument_spec["timezone"] = {"type": "str", "aliases": ["Timezone"]}
    argument_spec["use_default_processor_features"] = {
        "type": "bool",
        "aliases": ["UseDefaultProcessorFeatures"],
    }
    argument_spec["use_latest_restorable_time"] = {
        "type": "bool",
        "aliases": ["UseLatestRestorableTime"],
    }
    argument_spec["vpc_security_groups"] = {
        "type": "list",
        "elements": "str",
        "aliases": ["VPCSecurityGroups"],
    }
    argument_spec["state"] = {
        "type": "str",
        "choices": ["present", "absent", "list", "describe", "get"],
        "default": "present",
    }
    argument_spec["wait"] = {"type": "bool", "default": False}
    argument_spec["wait_timeout"] = {"type": "int", "default": 320}
    argument_spec["force"] = {"type": "bool", "default": False}
    argument_spec["purge_tags"] = {"type": "bool", "default": True}

    required_if = [
        ["state", "present", ["db_instance_identifier"], True],
        ["state", "absent", ["db_instance_identifier"], True],
        ["state", "get", ["db_instance_identifier"], True],
    ]
    mutually_exclusive = []

    module = AnsibleAmazonCloudModule(
        argument_spec=argument_spec,
        required_if=required_if,
        mutually_exclusive=mutually_exclusive,
        supports_check_mode=True,
    )
    cloud = CloudControlResource(module)

    type_name = "AWS::RDS::DBInstance"

    params = {}

    params["allocated_storage"] = module.params.get("allocated_storage")
    params["allow_major_version_upgrade"] = module.params.get(
        "allow_major_version_upgrade"
    )
    params["associated_roles"] = module.params.get("associated_roles")
    params["auto_minor_version_upgrade"] = module.params.get(
        "auto_minor_version_upgrade"
    )
    params["availability_zone"] = module.params.get("availability_zone")
    params["backup_retention_period"] = module.params.get("backup_retention_period")
    params["ca_certificate_identifier"] = module.params.get("ca_certificate_identifier")
    params["certificate_rotation_restart"] = module.params.get(
        "certificate_rotation_restart"
    )
    params["character_set_name"] = module.params.get("character_set_name")
    params["copy_tags_to_snapshot"] = module.params.get("copy_tags_to_snapshot")
    params["custom_iam_instance_profile"] = module.params.get(
        "custom_iam_instance_profile"
    )
    params["db_cluster_identifier"] = module.params.get("db_cluster_identifier")
    params["db_cluster_snapshot_identifier"] = module.params.get(
        "db_cluster_snapshot_identifier"
    )
    params["db_instance_class"] = module.params.get("db_instance_class")
    params["db_instance_identifier"] = module.params.get("db_instance_identifier")
    params["db_name"] = module.params.get("db_name")
    params["db_parameter_group_name"] = module.params.get("db_parameter_group_name")
    params["db_security_groups"] = module.params.get("db_security_groups")
    params["db_snapshot_identifier"] = module.params.get("db_snapshot_identifier")
    params["db_subnet_group_name"] = module.params.get("db_subnet_group_name")
    params["delete_automated_backups"] = module.params.get("delete_automated_backups")
    params["deletion_protection"] = module.params.get("deletion_protection")
    params["domain"] = module.params.get("domain")
    params["domain_iam_role_name"] = module.params.get("domain_iam_role_name")
    params["enable_cloudwatch_logs_exports"] = module.params.get(
        "enable_cloudwatch_logs_exports"
    )
    params["enable_iam_database_authentication"] = module.params.get(
        "enable_iam_database_authentication"
    )
    params["enable_performance_insights"] = module.params.get(
        "enable_performance_insights"
    )
    params["engine"] = module.params.get("engine")
    params["engine_version"] = module.params.get("engine_version")
    params["iops"] = module.params.get("iops")
    params["kms_key_id"] = module.params.get("kms_key_id")
    params["license_model"] = module.params.get("license_model")
    params["manage_master_user_password"] = module.params.get(
        "manage_master_user_password"
    )
    params["master_user_password"] = module.params.get("master_user_password")
    params["master_username"] = module.params.get("master_username")
    params["max_allocated_storage"] = module.params.get("max_allocated_storage")
    params["monitoring_interval"] = module.params.get("monitoring_interval")
    params["monitoring_role_arn"] = module.params.get("monitoring_role_arn")
    params["multi_az"] = module.params.get("multi_az")
    params["nchar_character_set_name"] = module.params.get("nchar_character_set_name")
    params["network_type"] = module.params.get("network_type")
    params["option_group_name"] = module.params.get("option_group_name")
    params["performance_insights_kms_key_id"] = module.params.get(
        "performance_insights_kms_key_id"
    )
    params["performance_insights_retention_period"] = module.params.get(
        "performance_insights_retention_period"
    )
    params["port"] = module.params.get("port")
    params["preferred_backup_window"] = module.params.get("preferred_backup_window")
    params["preferred_maintenance_window"] = module.params.get(
        "preferred_maintenance_window"
    )
    params["processor_features"] = module.params.get("processor_features")
    params["promotion_tier"] = module.params.get("promotion_tier")
    params["publicly_accessible"] = module.params.get("publicly_accessible")
    params["replica_mode"] = module.params.get("replica_mode")
    params["restore_time"] = module.params.get("restore_time")
    params["source_db_cluster_identifier"] = module.params.get(
        "source_db_cluster_identifier"
    )
    params["source_db_instance_automated_backups_arn"] = module.params.get(
        "source_db_instance_automated_backups_arn"
    )
    params["source_db_instance_identifier"] = module.params.get(
        "source_db_instance_identifier"
    )
    params["source_dbi_resource_id"] = module.params.get("source_dbi_resource_id")
    params["source_region"] = module.params.get("source_region")
    params["storage_encrypted"] = module.params.get("storage_encrypted")
    params["storage_throughput"] = module.params.get("storage_throughput")
    params["storage_type"] = module.params.get("storage_type")
    params["tags"] = module.params.get("tags")
    params["tde_credential_arn"] = module.params.get("tde_credential_arn")
    params["tde_credential_password"] = module.params.get("tde_credential_password")
    params["timezone"] = module.params.get("timezone")
    params["use_default_processor_features"] = module.params.get(
        "use_default_processor_features"
    )
    params["use_latest_restorable_time"] = module.params.get(
        "use_latest_restorable_time"
    )
    params["vpc_security_groups"] = module.params.get("vpc_security_groups")

    if module.params.get("engine") not in (
        "aurora",
        "aurora-postgresql",
        "aurora-mysql",
    ):
        # It can only be used when engine is one of ("aurora", "aurora-postgresql", "aurora-mysql").
        # Since the CloudFormation template assigns 'default: 1', it is always set to 1.
        params.pop("promotion_tier")

    # The DesiredState we pass to AWS must be a JSONArray of non-null values
    _params_to_set = scrub_none_parameters(params)

    # Only if resource is taggable
    if module.params.get("tags") is not None:
        _params_to_set["tags"] = ansible_dict_to_boto3_tag_list(module.params["tags"])

    # Use the alias from argument_spec as key and avoid snake_to_camel conversions
    params_to_set = map_key_to_alias(_params_to_set, argument_spec)

    # Ignore createOnlyProperties that can be set only during resource creation
    create_only_params = [
        "/properties/CharacterSetName",
        "/properties/CustomIAMInstanceProfile",
        "/properties/DBClusterIdentifier",
        "/properties/DBInstanceIdentifier",
        "/properties/DBName",
        "/properties/DBSubnetGroupName",
        "/properties/KmsKeyId",
        "/properties/MasterUsername",
        "/properties/NcharCharacterSetName",
        "/properties/Port",
        "/properties/SourceRegion",
        "/properties/StorageEncrypted",
        "/properties/Timezone",
    ]

    # Necessary to handle when module does not support all the states
    handlers = ["create", "read", "update", "delete", "list"]

    state = module.params.get("state")
    identifier = ["/properties/DBInstanceIdentifier"]

    results = {"changed": False, "result": {}}

    if state == "list":
        if "list" not in handlers:
            module.exit_json(
                **results, msg=f"Resource type {type_name} cannot be listed."
            )
        results["result"] = cloud.list_resources(type_name, identifier)

    if state in ("describe", "get"):
        if "read" not in handlers:
            module.exit_json(
                **results, msg=f"Resource type {type_name} cannot be read."
            )
        results["result"] = cloud.get_resource(type_name, identifier)

    if state == "present":
        results = cloud.present(
            type_name, identifier, params_to_set, create_only_params
        )

    if state == "absent":
        results["changed"] |= cloud.absent(type_name, identifier)

    module.exit_json(**results)


if __name__ == "__main__":
    main()
