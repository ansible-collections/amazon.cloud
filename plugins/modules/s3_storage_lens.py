#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright: (c) 2022, Ansible Project
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# template: header.j2
# This module is autogenerated by amazon_cloud_code_generator.
# See: https://github.com/ansible-collections/amazon_cloud_code_generator

from __future__ import absolute_import, division, print_function

__metaclass__ = type


DOCUMENTATION = r"""
module: s3_storage_lens
short_description: []
description: []
options:
    purge_tags:
        default: true
        description:
        - Remove tags not listed in I(tags).
        required: false
        type: bool
    state:
        choices:
        - present
        - absent
        - list
        - describe
        - get
        default: present
        description:
        - Goal state for resource.
        - I(state=present) creates the resource if it doesn't exist, or updates to
            the provided state if the resource already exists.
        - I(state=absent) ensures an existing instance is deleted.
        - I(state=list) get all the existing resources.
        - I(state=describe) or I(state=get) retrieves information on an existing resource.
        type: str
    storage_lens_configuration:
        description:
        - Specifies the details of Amazon S3 Storage Lens configuration.
        required: true
        suboptions:
            account_level:
                description:
                - Account-level metrics configurations.
                required: true
                suboptions:
                    activity_metrics:
                        description:
                        - Enables activity metrics.
                        suboptions:
                            is_enabled:
                                description:
                                - Specifies whether activity metrics are enabled or
                                    disabled.
                                type: bool
                        type: dict
                    bucket_level:
                        description:
                        - Bucket-level metrics configurations.
                        suboptions:
                            activity_metrics:
                                description:
                                - Enables activity metrics.
                                suboptions:
                                    is_enabled:
                                        description:
                                        - Specifies whether activity metrics are enabled
                                            or disabled.
                                        type: bool
                                type: dict
                            prefix_level:
                                description:
                                - Prefix-level metrics configurations.
                                suboptions:
                                    storage_metrics:
                                        description:
                                        - Not Provived.
                                        required: true
                                        suboptions:
                                            is_enabled:
                                                description:
                                                - Specifies whether prefix-level storage
                                                    metrics are enabled or disabled.
                                                type: bool
                                            selection_criteria:
                                                description:
                                                - Selection criteria for prefix-level
                                                    metrics.
                                                suboptions:
                                                    delimiter:
                                                        description:
                                                        - Delimiter to divide S3 key
                                                            into hierarchy of prefixes.
                                                        type: str
                                                    max_depth:
                                                        description:
                                                        - Max depth of prefixes of
                                                            S3 key that Amazon S3
                                                            Storage Lens will analyze.
                                                        type: int
                                                    min_storage_bytes_percentage:
                                                        description:
                                                        - The minimum storage bytes
                                                            threshold for the prefixes
                                                            to be included in the
                                                            analysis.
                                                        type: int
                                                type: dict
                                        type: dict
                                type: dict
                        type: dict
                type: dict
            aws_org:
                description:
                - The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.
                suboptions:
                    arn:
                        description:
                        - The Amazon Resource Name (ARN) of the specified resource.
                        required: true
                        type: str
                type: dict
            data_export:
                description:
                - Specifies how Amazon S3 Storage Lens metrics should be exported.
                suboptions:
                    cloud_watch_metrics:
                        description:
                        - CloudWatch metrics settings for the Amazon S3 Storage Lens
                            metrics export.
                        suboptions:
                            is_enabled:
                                description:
                                - Specifies whether CloudWatch metrics are enabled
                                    or disabled.
                                required: true
                                type: bool
                        type: dict
                    s3_bucket_destination:
                        description:
                        - S3 bucket destination settings for the Amazon S3 Storage
                            Lens metrics export.
                        suboptions:
                            account_id:
                                description:
                                - The AWS account ID that owns the destination S3
                                    bucket.
                                required: true
                                type: str
                            arn:
                                description:
                                - The ARN of the bucket to which Amazon S3 Storage
                                    Lens exports will be placed.
                                required: true
                                type: str
                            encryption:
                                description:
                                - Configures the server-side encryption for Amazon
                                    S3 Storage Lens report files with either S3-managed
                                    keys (SSE-S3) or KMS-managed keys (SSE-KMS).
                                suboptions:
                                    ssekms:
                                        description:
                                        - AWS KMS server-side encryption.
                                        suboptions:
                                            key_id:
                                                description:
                                                - The ARN of the KMS key to use for
                                                    encryption.
                                                required: true
                                                type: str
                                        type: dict
                                    sses3:
                                        description:
                                        - S3 default server-side encryption.
                                        type: dict
                                type: dict
                            format:
                                choices:
                                - CSV
                                - Parquet
                                description:
                                - Specifies the file format to use when exporting
                                    Amazon S3 Storage Lens metrics export.
                                required: true
                                type: str
                            output_schema_version:
                                choices:
                                - V_1
                                description:
                                - The version of the output schema to use when exporting
                                    Amazon S3 Storage Lens metrics.
                                required: true
                                type: str
                            prefix:
                                description:
                                - The prefix to use for Amazon S3 Storage Lens export.
                                type: str
                        type: dict
                type: dict
            exclude:
                description:
                - S3 buckets and Regions to include/exclude in the Amazon S3 Storage
                    Lens configuration.
                suboptions:
                    buckets:
                        description:
                        - The Amazon Resource Name (ARN) of the specified resource.
                        elements: str
                        type: list
                    regions:
                        description:
                        - An AWS Region.
                        elements: str
                        type: list
                type: dict
            id:
                description:
                - The ID that identifies the Amazon S3 Storage Lens configuration.
                required: true
                type: str
            include:
                description:
                - S3 buckets and Regions to include/exclude in the Amazon S3 Storage
                    Lens configuration.
                suboptions:
                    buckets:
                        description:
                        - The Amazon Resource Name (ARN) of the specified resource.
                        elements: str
                        type: list
                    regions:
                        description:
                        - An AWS Region.
                        elements: str
                        type: list
                type: dict
            is_enabled:
                description:
                - Specifies whether the Amazon S3 Storage Lens configuration is enabled
                    or disabled.
                required: true
                type: bool
        type: dict
    tags:
        aliases:
        - resource_tags
        description:
        - A dict of tags to apply to the resource.
        - To remove all tags set I(tags={}) and I(purge_tags=true).
        required: false
        type: dict
    wait:
        default: false
        description:
        - Wait for operation to complete before returning.
        type: bool
    wait_timeout:
        default: 320
        description:
        - How many seconds to wait for an operation to complete before timing out.
        type: int
author: Ansible Cloud Team (@ansible-collections)
version_added: 0.1.0
requirements: []
extends_documentation_fragment:
- amazon.cloud.aws
- amazon.cloud.ec2
"""

EXAMPLES = r"""
"""

RETURN = r"""
result:
    description: Dictionary containing resource information.
    returned: always
    type: complex
    contains:
        identifier:
            description: The unique identifier of the resource.
            type: str
        properties:
            description: The resource properties.
            type: dict
"""

import json

from ansible_collections.amazon.aws.plugins.module_utils.core import AnsibleAWSModule
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    CloudControlResource,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    snake_dict_to_camel_dict,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    ansible_dict_to_boto3_tag_list,
)


def main():

    argument_spec = dict(
        state=dict(
            type="str",
            choices=["present", "absent", "list", "describe", "get"],
            default="present",
        ),
    )

    argument_spec["storage_lens_configuration"] = {
        "type": "dict",
        "options": {
            "id": {"type": "str", "required": True},
            "include": {
                "type": "dict",
                "options": {
                    "buckets": {"type": "list", "elements": "str"},
                    "regions": {"type": "list", "elements": "str"},
                },
            },
            "exclude": {
                "type": "dict",
                "options": {
                    "buckets": {"type": "list", "elements": "str"},
                    "regions": {"type": "list", "elements": "str"},
                },
            },
            "aws_org": {
                "type": "dict",
                "options": {"arn": {"type": "str", "required": True}},
            },
            "account_level": {
                "type": "dict",
                "required": True,
                "options": {
                    "activity_metrics": {
                        "type": "dict",
                        "options": {"is_enabled": {"type": "bool"}},
                    },
                    "bucket_level": {
                        "type": "dict",
                        "options": {
                            "activity_metrics": {
                                "type": "dict",
                                "options": {"is_enabled": {"type": "bool"}},
                            },
                            "prefix_level": {
                                "type": "dict",
                                "options": {
                                    "storage_metrics": {
                                        "type": "dict",
                                        "options": {
                                            "is_enabled": {"type": "bool"},
                                            "selection_criteria": {
                                                "type": "dict",
                                                "options": {
                                                    "max_depth": {"type": "int"},
                                                    "delimiter": {"type": "str"},
                                                    "min_storage_bytes_percentage": {
                                                        "type": "int"
                                                    },
                                                },
                                            },
                                        },
                                        "required": True,
                                    }
                                },
                            },
                        },
                    },
                },
            },
            "data_export": {
                "type": "dict",
                "options": {
                    "s3_bucket_destination": {
                        "type": "dict",
                        "options": {
                            "output_schema_version": {
                                "type": "str",
                                "choices": ["V_1"],
                                "required": True,
                            },
                            "format": {
                                "type": "str",
                                "choices": ["CSV", "Parquet"],
                                "required": True,
                            },
                            "account_id": {"type": "str", "required": True},
                            "arn": {"type": "str", "required": True},
                            "prefix": {"type": "str"},
                            "encryption": {
                                "type": "dict",
                                "options": {
                                    "sses3": {"type": "dict"},
                                    "ssekms": {
                                        "type": "dict",
                                        "options": {
                                            "key_id": {"type": "str", "required": True}
                                        },
                                    },
                                },
                            },
                        },
                    },
                    "cloud_watch_metrics": {
                        "type": "dict",
                        "options": {"is_enabled": {"type": "bool", "required": True}},
                    },
                },
            },
            "is_enabled": {"type": "bool", "required": True},
        },
        "required": True,
    }
    argument_spec["tags"] = {
        "type": "dict",
        "required": False,
        "aliases": ["resource_tags"],
    }
    argument_spec["state"] = {
        "type": "str",
        "choices": ["present", "absent", "list", "describe", "get"],
        "default": "present",
    }
    argument_spec["wait"] = {"type": "bool", "default": False}
    argument_spec["wait_timeout"] = {"type": "int", "default": 320}
    argument_spec["purge_tags"] = {"type": "bool", "required": False, "default": True}

    required_if = [
        ["state", "present", ["storage_lens_configuration", "id"], True],
        ["state", "absent", ["id"], True],
        ["state", "get", ["id"], True],
    ]

    module = AnsibleAWSModule(
        argument_spec=argument_spec, required_if=required_if, supports_check_mode=True
    )
    cloud = CloudControlResource(module)

    type_name = "AWS::S3::StorageLens"

    params = {}

    params["storage_lens_configuration"] = module.params.get(
        "storage_lens_configuration"
    )
    params["tags"] = module.params.get("tags")

    # The DesiredState we pass to AWS must be a JSONArray of non-null values
    _params_to_set = {k: v for k, v in params.items() if v is not None}

    # Only if resource is taggable
    if module.params.get("tags", None):
        _params_to_set["tags"] = ansible_dict_to_boto3_tag_list(module.params["tags"])

    params_to_set = snake_dict_to_camel_dict(_params_to_set, capitalize_first=True)

    # Ignore createOnlyProperties that can be set only during resource creation
    create_only_params = ["id"]

    state = module.params.get("state")
    identifier = module.params.get("id")

    results = {"changed": False, "result": []}

    if state == "list":
        results["result"] = cloud.list_resources(type_name)

    if state in ("describe", "get"):
        results["result"] = cloud.get_resource(type_name, identifier)

    if state == "present":
        results["changed"] |= cloud.present(
            type_name, identifier, params_to_set, create_only_params
        )
        results["result"] = cloud.get_resource(type_name, identifier)

    if state == "absent":
        results["changed"] |= cloud.absent(type_name, identifier)

    module.exit_json(**results)


if __name__ == "__main__":
    main()
