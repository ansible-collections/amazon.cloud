#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright: (c) 2022, Ansible Project
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# template: header.j2
# This module is autogenerated by amazon_cloud_code_generator.
# See: https://github.com/ansible-collections/amazon_cloud_code_generator

from __future__ import absolute_import, division, print_function

__metaclass__ = type


DOCUMENTATION = r"""
module: s3_bucket
short_description: Manage S3 buckets
description: Create and manage S3 buckets (list, create, update, describe, delete).
options:
    accelerate_configuration:
        description:
        - Configuration for the transfer acceleration state.
        suboptions:
            acceleration_status:
                choices:
                - Enabled
                - Suspended
                description:
                - Configures the transfer acceleration state for an Amazon S3 bucket.
                required: true
                type: str
        type: dict
    access_control:
        choices:
        - AuthenticatedRead
        - AwsExecRead
        - BucketOwnerFullControl
        - BucketOwnerRead
        - LogDeliveryWrite
        - Private
        - PublicRead
        - PublicReadWrite
        description:
        - A canned access control list (ACL) that grants predefined permissions to
            the bucket.
        type: str
    analytics_configurations:
        description:
        - Specifies the configuration and any analyses for the analytics filter of
            an Amazon S3 bucket.
        elements: dict
        suboptions:
            id:
                description:
                - The ID that identifies the analytics configuration.
                required: true
                type: str
            prefix:
                description:
                - The prefix that an object must have to be included in the analytics
                    results.
                type: str
            storage_class_analysis:
                description:
                - Specifies data related to access patterns to be collected and made
                    available to analyze the tradeoffs between different storage classes
                    for an Amazon S3 bucket.
                required: true
                suboptions:
                    data_export:
                        description:
                        - Specifies how data related to the storage class analysis
                            for an Amazon S3 bucket should be exported.
                        suboptions:
                            destination:
                                description:
                                - Specifies information about where to publish analysis
                                    or configuration results for an Amazon S3 bucket
                                    and S3 Replication Time Control (S3 RTC).
                                required: true
                                suboptions:
                                    bucket_account_id:
                                        description:
                                        - The account ID that owns the destination
                                            S3 bucket.
                                        type: str
                                    bucket_arn:
                                        description:
                                        - The Amazon Resource Name (ARN) of the bucket
                                            to which data is exported.
                                        type: str
                                    format:
                                        choices:
                                        - CSV
                                        - ORC
                                        - Parquet
                                        description:
                                        - Specifies the file format used when exporting
                                            data to Amazon S3.
                                        type: str
                                    prefix:
                                        description:
                                        - The prefix to use when exporting data.
                                        - The prefix is prepended to all results.
                                        type: str
                                type: dict
                            output_schema_version:
                                default: V_1
                                description:
                                - The version of the output schema to use when exporting
                                    data.
                                type: str
                        type: dict
                type: dict
            tag_filters:
                description:
                - Tags to use to identify a subset of objects for an Amazon S3 bucket.
                elements: dict
                suboptions:
                    key:
                        description:
                        - Not Provived.
                        required: true
                        type: str
                    value:
                        description:
                        - Not Provived.
                        required: true
                        type: str
                type: list
        type: list
    bucket_encryption:
        description:
        - Specifies default encryption for a bucket using server-side encryption with
            either Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS).
        suboptions:
            server_side_encryption_configuration:
                description:
                - Specifies the default server-side encryption configuration.
                elements: dict
                required: true
                suboptions:
                    bucket_key_enabled:
                        description:
                        - Specifies whether Amazon S3 should use an S3 Bucket Key
                            with server-side encryption using KMS (SSE-KMS) for new
                            objects in the bucket.
                        - Existing objects are not affected.
                        - Setting the I(bucket_key_enabled) element to true causes
                            Amazon S3 to use an S3 Bucket Key.
                        - By default, S3 Bucket Key is not enabled.
                        type: bool
                    server_side_encryption_by_default:
                        description:
                        - Specifies the default server-side encryption to apply to
                            new objects in the bucket.
                        - If a PUT Object request doesnt specify any server-side encryption,
                            this default encryption will be applied.
                        suboptions:
                            kms_master_key_id:
                                description:
                                - I(kms_master_key)ID can only be used when you set
                                    the value of I(sse_algorithm) as aws:kms.
                                type: str
                            sse_algorithm:
                                choices:
                                - AES256
                                - aws:kms
                                description:
                                - Not Provived.
                                required: true
                                type: str
                        type: dict
                type: list
        type: dict
    bucket_name:
        description:
        - A name for the bucket.
        - If you dont specify a name, AWS CloudFormation generates a unique physical
            ID and uses that ID for the bucket name.
        type: str
    cors_configuration:
        description:
        - Rules that define cross-origin resource sharing of objects in this bucket.
        suboptions:
            cors_rules:
                description:
                - A set of origins and methods (cross-origin access that you want
                    to allow).
                - You can add up to 100 rules to the configuration.
                elements: dict
                suboptions:
                    allowed_headers:
                        description:
                        - Headers that are specified in the Access-Control-Request-Headers
                            header.
                        elements: str
                        type: list
                    allowed_methods:
                        choices:
                        - DELETE
                        - GET
                        - HEAD
                        - POST
                        - PUT
                        description:
                        - An HTTP method that you allow the origin to execute.
                        elements: str
                        required: true
                        type: list
                    allowed_origins:
                        description:
                        - One or more origins you want customers to be able to access
                            the bucket from.
                        elements: str
                        required: true
                        type: list
                    exposed_headers:
                        description:
                        - One or more headers in the response that you want customers
                            to be able to access from their applications (for example,
                            from a JavaScript XMLHttpRequest object).
                        elements: str
                        type: list
                    id:
                        description:
                        - A unique identifier for this rule.
                        type: str
                    max_age:
                        description:
                        - The time in seconds that your browser is to cache the preflight
                            response for the specified resource.
                        type: int
                type: list
        type: dict
    intelligent_tiering_configurations:
        description:
        - Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
        elements: dict
        suboptions:
            id:
                description:
                - The ID used to identify the S3 Intelligent-Tiering configuration.
                required: true
                type: str
            prefix:
                description:
                - An object key name prefix that identifies the subset of objects
                    to which the rule applies.
                type: str
            status:
                choices:
                - Disabled
                - Enabled
                description:
                - Specifies the status of the configuration.
                required: true
                type: str
            tag_filters:
                description:
                - Tags to use to identify a subset of objects for an Amazon S3 bucket.
                elements: dict
                suboptions:
                    key:
                        description:
                        - Not Provived.
                        required: true
                        type: str
                    value:
                        description:
                        - Not Provived.
                        required: true
                        type: str
                type: list
            tierings:
                description:
                - Specifies a list of S3 Intelligent-Tiering storage class tiers in
                    the configuration.
                - At least one tier must be defined in the list.
                - 'At most, you can specify two tiers in the list, one for each available
                    I(access_tier): C(ARCHIVE_ACCESS) and C(DEEP_ARCHIVE_ACCESS).'
                elements: dict
                suboptions:
                    access_tier:
                        choices:
                        - ARCHIVE_ACCESS
                        - DEEP_ARCHIVE_ACCESS
                        description:
                        - S3 Intelligent-Tiering access tier.
                        - See Storage class for automatically optimizing frequently
                            and infrequently accessed objects for a list of access
                            tiers in the S3 Intelligent-Tiering storage class.
                        required: true
                        type: str
                    days:
                        description:
                        - The number of consecutive days of no access after which
                            an object will be eligible to be transitioned to the corresponding
                            tier.
                        - The minimum number of days specified for Archive Access
                            tier must be at least 90 days and Deep Archive Access
                            tier must be at least 180 days.
                        - The maximum can be up to 2 years (730 days).
                        required: true
                        type: int
                type: list
        type: list
    inventory_configurations:
        description:
        - The inventory configuration for an Amazon S3 bucket.
        elements: dict
        suboptions:
            destination:
                description:
                - Specifies information about where to publish analysis or configuration
                    results for an Amazon S3 bucket and S3 Replication Time Control
                    (S3 RTC).
                required: true
                suboptions:
                    bucket_account_id:
                        description:
                        - The account ID that owns the destination S3 bucket.
                        type: str
                    bucket_arn:
                        description:
                        - The Amazon Resource Name (ARN) of the bucket to which data
                            is exported.
                        type: str
                    format:
                        choices:
                        - CSV
                        - ORC
                        - Parquet
                        description:
                        - Specifies the file format used when exporting data to Amazon
                            S3.
                        type: str
                    prefix:
                        description:
                        - The prefix to use when exporting data.
                        - The prefix is prepended to all results.
                        type: str
                type: dict
            enabled:
                description:
                - Specifies whether the inventory is enabled or disabled.
                required: true
                type: bool
            id:
                description:
                - The ID used to identify the inventory configuration.
                required: true
                type: str
            included_object_versions:
                choices:
                - All
                - Current
                description:
                - Object versions to include in the inventory list.
                required: true
                type: str
            optional_fields:
                choices:
                - BucketKeyStatus
                - ETag
                - EncryptionStatus
                - IntelligentTieringAccessTier
                - IsMultipartUploaded
                - LastModifiedDate
                - ObjectLockLegalHoldStatus
                - ObjectLockMode
                - ObjectLockRetainUntilDate
                - ReplicationStatus
                - Size
                - StorageClass
                description:
                - Contains the optional fields that are included in the inventory
                    results.
                elements: str
                type: list
            prefix:
                description:
                - The prefix that is prepended to all inventory results.
                type: str
            schedule_frequency:
                choices:
                - Daily
                - Weekly
                description:
                - Specifies the schedule for generating inventory results.
                required: true
                type: str
        type: list
    lifecycle_configuration:
        description:
        - Rules that define how Amazon S3 manages objects during their lifetime.
        suboptions:
            rules:
                description:
                - 'You must specify at least one of the following properties: I(abort_incomplete_multipart_upload),
                    I(expiration_date), I(expiration_in_days), I(noncurrent_version_expiration_in_days),
                    I(noncurrent_version_transition), I(noncurrent_version_transitions),
                    I(transition), or I(transitions).'
                elements: dict
                suboptions:
                    abort_incomplete_multipart_upload:
                        description:
                        - Specifies the days since the initiation of an incomplete
                            multipart upload that Amazon S3 will wait before permanently
                            removing all parts of the upload.
                        suboptions:
                            days_after_initiation:
                                description:
                                - Specifies the number of days after which Amazon
                                    S3 aborts an incomplete multipart upload.
                                required: true
                                type: int
                        type: dict
                    expiration_date:
                        description:
                        - The date value in ISO 8601 format.
                        - The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
                        type: str
                    expiration_in_days:
                        description:
                        - Not Provived.
                        type: int
                    expired_object_delete_marker:
                        description:
                        - Not Provived.
                        type: bool
                    id:
                        description:
                        - Not Provived.
                        type: str
                    noncurrent_version_expiration:
                        description:
                        - Container for the expiration rule that describes when noncurrent
                            objects are expired.
                        - If your bucket is versioning-enabled (or versioning is suspended),
                            you can set this action to request that Amazon S3 expire
                            noncurrent object versions at a specific period in the
                            objects lifetime
                        suboptions:
                            newer_noncurrent_versions:
                                description:
                                - Specified the number of newer noncurrent and current
                                    versions that must exists before performing the
                                    associated action
                                type: int
                            noncurrent_days:
                                description:
                                - Specified the number of days an object is noncurrent
                                    before Amazon S3 can perform the associated action
                                required: true
                                type: int
                        type: dict
                    noncurrent_version_expiration_in_days:
                        description:
                        - Not Provived.
                        type: int
                    noncurrent_version_transition:
                        description:
                        - Container for the transition rule that describes when noncurrent
                            objects transition to the C(STANDARD_IA), C(ONEZONE_IA),
                            C(INTELLIGENT_TIERING), C(GLACIER_IR), C(GLACIER), or
                            C(DEEP_ARCHIVE) storage class.
                        - If your bucket is versioning-enabled (or versioning is suspended),
                            you can set this action to request that Amazon S3 transition
                            noncurrent object versions to the C(STANDARD_IA), C(ONEZONE_IA),
                            C(INTELLIGENT_TIERING), C(GLACIER_IR), C(GLACIER), or
                            C(DEEP_ARCHIVE) storage class at a specific period in
                            the objects lifetime.
                        suboptions:
                            newer_noncurrent_versions:
                                description:
                                - Specified the number of newer noncurrent and current
                                    versions that must exists before performing the
                                    associated action
                                type: int
                            storage_class:
                                choices:
                                - DEEP_ARCHIVE
                                - GLACIER
                                - GLACIER_IR
                                - Glacier
                                - INTELLIGENT_TIERING
                                - ONEZONE_IA
                                - STANDARD_IA
                                description:
                                - The class of storage used to store the object.
                                required: true
                                type: str
                            transition_in_days:
                                description:
                                - Specifies the number of days an object is noncurrent
                                    before Amazon S3 can perform the associated action.
                                required: true
                                type: int
                        type: dict
                    noncurrent_version_transitions:
                        description:
                        - Container for the transition rule that describes when noncurrent
                            objects transition to the C(STANDARD_IA), C(ONEZONE_IA),
                            C(INTELLIGENT_TIERING), C(GLACIER_IR), C(GLACIER), or
                            C(DEEP_ARCHIVE) storage class.
                        - If your bucket is versioning-enabled (or versioning is suspended),
                            you can set this action to request that Amazon S3 transition
                            noncurrent object versions to the C(STANDARD_IA), C(ONEZONE_IA),
                            C(INTELLIGENT_TIERING), C(GLACIER_IR), C(GLACIER), or
                            C(DEEP_ARCHIVE) storage class at a specific period in
                            the objects lifetime.
                        elements: dict
                        suboptions:
                            newer_noncurrent_versions:
                                description:
                                - Specified the number of newer noncurrent and current
                                    versions that must exists before performing the
                                    associated action
                                type: int
                            storage_class:
                                choices:
                                - DEEP_ARCHIVE
                                - GLACIER
                                - GLACIER_IR
                                - Glacier
                                - INTELLIGENT_TIERING
                                - ONEZONE_IA
                                - STANDARD_IA
                                description:
                                - The class of storage used to store the object.
                                required: true
                                type: str
                            transition_in_days:
                                description:
                                - Specifies the number of days an object is noncurrent
                                    before Amazon S3 can perform the associated action.
                                required: true
                                type: int
                        type: list
                    object_size_greater_than:
                        description:
                        - Not Provived.
                        type: str
                    object_size_less_than:
                        description:
                        - Not Provived.
                        type: str
                    prefix:
                        description:
                        - Not Provived.
                        type: str
                    status:
                        choices:
                        - Disabled
                        - Enabled
                        description:
                        - Not Provived.
                        required: true
                        type: str
                    tag_filters:
                        description:
                        - Tags to use to identify a subset of objects for an Amazon
                            S3 bucket.
                        elements: dict
                        suboptions:
                            key:
                                description:
                                - Not Provived.
                                required: true
                                type: str
                            value:
                                description:
                                - Not Provived.
                                required: true
                                type: str
                        type: list
                    transition:
                        description:
                        - You must specify at least one of I(transition_date) and
                            I(transition_in_days)
                        suboptions:
                            storage_class:
                                choices:
                                - DEEP_ARCHIVE
                                - GLACIER
                                - GLACIER_IR
                                - Glacier
                                - INTELLIGENT_TIERING
                                - ONEZONE_IA
                                - STANDARD_IA
                                description:
                                - Not Provived.
                                required: true
                                type: str
                            transition_date:
                                description:
                                - The date value in ISO 8601 format.
                                - The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
                                type: str
                            transition_in_days:
                                description:
                                - Not Provived.
                                type: int
                        type: dict
                    transitions:
                        description:
                        - You must specify at least one of I(transition_date) and
                            I(transition_in_days)
                        elements: dict
                        suboptions:
                            storage_class:
                                choices:
                                - DEEP_ARCHIVE
                                - GLACIER
                                - GLACIER_IR
                                - Glacier
                                - INTELLIGENT_TIERING
                                - ONEZONE_IA
                                - STANDARD_IA
                                description:
                                - Not Provived.
                                required: true
                                type: str
                            transition_date:
                                description:
                                - The date value in ISO 8601 format.
                                - The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
                                type: str
                            transition_in_days:
                                description:
                                - Not Provived.
                                type: int
                        type: list
                type: list
        type: dict
    logging_configuration:
        description:
        - Settings that define where logs are stored.
        suboptions:
            destination_bucket_name:
                description:
                - The name of an Amazon S3 bucket where Amazon S3 store server access
                    log files.
                - You can store log files in any bucket that you own.
                - By default, logs are stored in the bucket where the I(logging_configuration)
                    property is defined.
                type: str
            log_file_prefix:
                description:
                - Not Provived.
                type: str
        type: dict
    metrics_configurations:
        description:
        - Settings that define a metrics configuration for the CloudWatch request
            metrics from the bucket.
        elements: dict
        suboptions:
            access_point_arn:
                description:
                - Not Provived.
                type: str
            id:
                description:
                - Not Provived.
                required: true
                type: str
            prefix:
                description:
                - Not Provived.
                type: str
            tag_filters:
                description:
                - Tags to use to identify a subset of objects for an Amazon S3 bucket.
                elements: dict
                suboptions:
                    key:
                        description:
                        - Not Provived.
                        required: true
                        type: str
                    value:
                        description:
                        - Not Provived.
                        required: true
                        type: str
                type: list
        type: list
    notification_configuration:
        description:
        - Configuration that defines how Amazon S3 handles bucket notifications.Describes
            the notification configuration for an Amazon S3 bucket.
        suboptions:
            event_bridge_configuration:
                description:
                - Describes the Amazon EventBridge notification configuration for
                    an Amazon S3 bucket.
                suboptions:
                    event_bridge_enabled:
                        default: 'true'
                        description:
                        - Specifies whether to send notifications to Amazon EventBridge
                            when events occur in an Amazon S3 bucket.
                        type: bool
                type: dict
            lambda_configurations:
                description:
                - Describes the AWS Lambda functions to invoke and the events for
                    which to invoke them.
                elements: dict
                suboptions:
                    event:
                        description:
                        - The Amazon S3 bucket event for which to invoke the AWS Lambda
                            function.
                        required: true
                        type: str
                    filter:
                        description:
                        - The filtering rules that determine which objects invoke
                            the AWS Lambda function.Specifies object key name filtering
                            rules.
                        suboptions:
                            s3_key:
                                description:
                                - A container for object key name prefix and suffix
                                    filtering rules.
                                required: true
                                suboptions:
                                    rules:
                                        description:
                                        - Specifies the Amazon S3 object key name
                                            to filter on and whether to filter on
                                            the suffix or prefix of the key name.
                                        elements: dict
                                        suboptions:
                                            name:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                            value:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                        type: list
                                type: dict
                        type: dict
                    function:
                        description:
                        - The Amazon Resource Name (ARN) of the AWS Lambda function
                            that Amazon S3 invokes when the specified event type occurs.
                        required: true
                        type: str
                type: list
            queue_configurations:
                description:
                - The Amazon Simple Queue Service queues to publish messages to and
                    the events for which to publish messages.
                elements: dict
                suboptions:
                    event:
                        description:
                        - The Amazon S3 bucket event about which you want to publish
                            messages to Amazon SQS.
                        required: true
                        type: str
                    filter:
                        description:
                        - The filtering rules that determine which objects trigger
                            notifications.
                        suboptions:
                            s3_key:
                                description:
                                - A container for object key name prefix and suffix
                                    filtering rules.
                                required: true
                                suboptions:
                                    rules:
                                        description:
                                        - Specifies the Amazon S3 object key name
                                            to filter on and whether to filter on
                                            the suffix or prefix of the key name.
                                        elements: dict
                                        suboptions:
                                            name:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                            value:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                        type: list
                                type: dict
                        type: dict
                    queue:
                        description:
                        - The Amazon Resource Name (ARN) of the Amazon SQS queue to
                            which Amazon S3 publishes a message when it detects events
                            of the specified type.
                        required: true
                        type: str
                type: list
            topic_configurations:
                description:
                - The topic to which notifications are sent and the events for which
                    notifications are generated.
                elements: dict
                suboptions:
                    event:
                        description:
                        - The Amazon S3 bucket event about which to send notifications.
                        required: true
                        type: str
                    filter:
                        description:
                        - The filtering rules that determine for which objects to
                            send notifications.
                        suboptions:
                            s3_key:
                                description:
                                - A container for object key name prefix and suffix
                                    filtering rules.
                                required: true
                                suboptions:
                                    rules:
                                        description:
                                        - Specifies the Amazon S3 object key name
                                            to filter on and whether to filter on
                                            the suffix or prefix of the key name.
                                        elements: dict
                                        suboptions:
                                            name:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                            value:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                        type: list
                                type: dict
                        type: dict
                    topic:
                        description:
                        - The Amazon Resource Name (ARN) of the Amazon SNS topic to
                            which Amazon S3 publishes a message when it detects events
                            of the specified type.
                        required: true
                        type: str
                type: list
        type: dict
    object_lock_configuration:
        description:
        - Places an Object Lock configuration on the specified bucket.
        suboptions:
            object_lock_enabled:
                default: Enabled
                description:
                - Not Provived.
                type: str
            rule:
                description:
                - The Object Lock rule in place for the specified object.
                suboptions:
                    default_retention:
                        description:
                        - The default retention period that you want to apply to new
                            objects placed in the specified bucket.
                        suboptions:
                            days:
                                description:
                                - Not Provived.
                                type: int
                            mode:
                                choices:
                                - COMPLIANCE
                                - GOVERNANCE
                                description:
                                - Not Provived.
                                type: str
                            years:
                                description:
                                - Not Provived.
                                type: int
                        type: dict
                type: dict
        type: dict
    object_lock_enabled:
        description:
        - Indicates whether this bucket has an Object Lock configuration enabled.
        type: bool
    ownership_controls:
        description:
        - Specifies the container element for object ownership rules.
        suboptions:
            rules:
                description:
                - Not Provived.
                elements: dict
                required: true
                suboptions:
                    object_ownership:
                        choices:
                        - BucketOwnerEnforced
                        - BucketOwnerPreferred
                        - ObjectWriter
                        description:
                        - Specifies an object ownership rule.
                        type: str
                type: list
        type: dict
    public_access_block_configuration:
        description:
        - Configuration that defines how Amazon S3 handles public access.
        suboptions:
            block_public_acls:
                description:
                - Specifies whether Amazon S3 should block public access control lists
                    (ACLs) for this bucket and objects in this bucket.
                - 'Setting this element to C(True) causes the following behavior:'
                - '- PUT Bucket acl and PUT Object acl calls fail if the specified
                    ACL is public.'
                - '- PUT Object calls fail if the request includes a public ACL.'
                - Enabling this setting doesnt affect existing policies or ACLs.
                type: bool
            block_public_policy:
                description:
                - Specifies whether Amazon S3 should block public bucket policies
                    for this bucket.
                - Setting this element to C(True) causes Amazon S3 to reject calls
                    to PUT Bucket policy if the specified bucket policy allows public
                    access.
                - Enabling this setting doesnt affect existing bucket policies.
                type: bool
            ignore_public_acls:
                description:
                - Specifies whether Amazon S3 should ignore public ACLs for this bucket
                    and objects in this bucket.
                - Setting this element to C(True) causes Amazon S3 to ignore all public
                    ACLs on this bucket and objects in this bucket.
                - Enabling this setting doesnt affect the persistence of any existing
                    ACLs and doesnt prevent new public ACLs from being set.
                type: bool
            restrict_public_buckets:
                description:
                - Specifies whether Amazon S3 should restrict public bucket policies
                    for this bucket.
                - Setting this element to C(True) restricts access to this bucket
                    to only AWS services and authorized users within this account
                    if the bucket has a public policy.
                - Enabling this setting doesnt affect previously stored bucket policies,
                    except that public and cross-account access within any public
                    bucket policy, including non-public delegation to specific accounts,
                    is blocked.
                type: bool
        type: dict
    purge_tags:
        default: true
        description:
        - Remove tags not listed in I(tags).
        required: false
        type: bool
    replication_configuration:
        description:
        - Configuration for replicating objects in an S3 bucket.A container for replication
            rules.
        - You can add up to 1,000 rules.
        - The maximum size of a replication configuration is 2 MB.
        suboptions:
            role:
                description:
                - The Amazon Resource Name (ARN) of the AWS Identity and Access Management
                    (IAM) role that Amazon S3 assumes when replicating objects.
                required: true
                type: str
            rules:
                description:
                - Specifies which Amazon S3 objects to replicate and where to store
                    the replicas.
                elements: dict
                suboptions:
                    delete_marker_replication:
                        description:
                        - Not Provived.
                        suboptions:
                            status:
                                choices:
                                - Disabled
                                - Enabled
                                description:
                                - Not Provived.
                                type: str
                        type: dict
                    destination:
                        description:
                        - Specifies which Amazon S3 bucket to store replicated objects
                            in and their storage class.
                        required: true
                        suboptions:
                            access_control_translation:
                                description:
                                - Specify this only in a cross-account scenario (where
                                    source and destination bucket owners are not the
                                    same), and you want to change replica ownership
                                    to the AWS account that owns the destination bucket.
                                - If this is not specified in the replication configuration,
                                    the replicas are owned by same AWS account that
                                    owns the source object.
                                suboptions:
                                    owner:
                                        default: Destination
                                        description:
                                        - Not Provived.
                                        type: str
                                type: dict
                            account:
                                description:
                                - Not Provived.
                                type: str
                            bucket:
                                description:
                                - Not Provived.
                                type: str
                            encryption_configuration:
                                description:
                                - Specifies encryption-related information for an
                                    Amazon S3 bucket that is a destination for replicated
                                    objects.
                                suboptions:
                                    replica_kms_key_id:
                                        description:
                                        - Specifies the ID (Key ARN or Alias ARN)
                                            of the customer managed customer master
                                            key (CMK) stored in AWS Key Management
                                            Service (KMS) for the destination bucket.
                                        required: true
                                        type: str
                                type: dict
                            metrics:
                                description:
                                - Not Provived.
                                suboptions:
                                    event_threshold:
                                        description:
                                        - Not Provived.
                                        suboptions:
                                            minutes:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: int
                                        type: dict
                                    status:
                                        choices:
                                        - Disabled
                                        - Enabled
                                        description:
                                        - Not Provived.
                                        required: true
                                        type: str
                                type: dict
                            replication_time:
                                description:
                                - Not Provived.
                                suboptions:
                                    status:
                                        choices:
                                        - Disabled
                                        - Enabled
                                        description:
                                        - Not Provived.
                                        required: true
                                        type: str
                                    time:
                                        description:
                                        - Not Provived.
                                        required: true
                                        suboptions:
                                            minutes:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: int
                                        type: dict
                                type: dict
                            storage_class:
                                choices:
                                - DEEP_ARCHIVE
                                - GLACIER
                                - GLACIER_IR
                                - INTELLIGENT_TIERING
                                - ONEZONE_IA
                                - REDUCED_REDUNDANCY
                                - STANDARD
                                - STANDARD_IA
                                description:
                                - The storage class to use when replicating objects,
                                    such as S3 Standard or reduced redundancy.
                                type: str
                        type: dict
                    filter:
                        description:
                        - Not Provived.
                        suboptions:
                            and:
                                description:
                                - Not Provived.
                                suboptions:
                                    prefix:
                                        description:
                                        - Not Provived.
                                        type: str
                                    tag_filters:
                                        description:
                                        - Tags to use to identify a subset of objects
                                            for an Amazon S3 bucket.
                                        elements: dict
                                        suboptions:
                                            key:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                            value:
                                                description:
                                                - Not Provived.
                                                required: true
                                                type: str
                                        type: list
                                type: dict
                            prefix:
                                description:
                                - Not Provived.
                                type: str
                            tag_filter:
                                description:
                                - Tags to use to identify a subset of objects for
                                    an Amazon S3 bucket.
                                suboptions:
                                    key:
                                        description:
                                        - Not Provived.
                                        required: true
                                        type: str
                                    value:
                                        description:
                                        - Not Provived.
                                        required: true
                                        type: str
                                type: dict
                        type: dict
                    id:
                        description:
                        - A unique identifier for the rule.
                        type: str
                    prefix:
                        description:
                        - An object key name prefix that identifies the object or
                            objects to which the rule applies.
                        type: str
                    priority:
                        description:
                        - Not Provived.
                        type: int
                    source_selection_criteria:
                        description:
                        - A container that describes additional filters for identifying
                            the source objects that you want to replicate.
                        suboptions:
                            replica_modifications:
                                description:
                                - A filter that you can specify for selection for
                                    modifications on replicas.
                                suboptions:
                                    status:
                                        choices:
                                        - Disabled
                                        - Enabled
                                        description:
                                        - Specifies whether Amazon S3 replicates modifications
                                            on replicas.
                                        required: true
                                        type: str
                                type: dict
                            sse_kms_encrypted_objects:
                                description:
                                - A container for filter information for the selection
                                    of Amazon S3 objects encrypted with AWS KMS.A
                                    container for filter information for the selection
                                    of S3 objects encrypted with AWS KMS.
                                suboptions:
                                    status:
                                        choices:
                                        - Disabled
                                        - Enabled
                                        description:
                                        - Specifies whether Amazon S3 replicates objects
                                            created with server-side encryption using
                                            a customer master key (CMK) stored in
                                            AWS Key Management Service.
                                        required: true
                                        type: str
                                type: dict
                        type: dict
                    status:
                        choices:
                        - Disabled
                        - Enabled
                        description:
                        - Specifies whether the rule is enabled.
                        required: true
                        type: str
                type: list
        type: dict
    state:
        choices:
        - present
        - absent
        - list
        - describe
        - get
        default: present
        description:
        - Goal state for resouirce.
        - I(state=present) creates the resource if it doesn't exist, or updates to
            the provided state if the resource already exists.
        - I(state=absent) ensures an existing instance is deleted.
        - I(state=list) get all the existing resources.
        - I(state=describe) or I(state=get) retrieves information on an existing resource.
        type: str
    tags:
        aliases:
        - resource_tags
        description:
        - A dict of tags to apply to the resource.
        - To remove all tags set I(tags={}) and I(purge_tags=true).
        required: false
        type: dict
    versioning_configuration:
        description:
        - Describes the versioning state of an Amazon S3 bucket.
        suboptions:
            status:
                choices:
                - Enabled
                - Suspended
                default: Suspended
                description:
                - The versioning state of the bucket.
                type: str
        type: dict
    wait:
        default: false
        description:
        - Wait for operation to complete before returning.
        type: bool
    wait_timeout:
        default: 320
        description:
        - How many seconds to wait for an operation to complete before timing out.
        type: int
    website_configuration:
        description:
        - Specifies website configuration parameters for an Amazon S3 bucket.
        suboptions:
            error_document:
                description:
                - The name of the error document for the website.
                type: str
            index_document:
                description:
                - The name of the index document for the website.
                type: str
            redirect_all_requests_to:
                description:
                - Specifies the redirect behavior of all requests to a website endpoint
                    of an Amazon S3 bucket.
                suboptions:
                    host_name:
                        description:
                        - Name of the host where requests are redirected.
                        required: true
                        type: str
                    protocol:
                        choices:
                        - http
                        - https
                        description:
                        - Protocol to use when redirecting requests.
                        - The default is the protocol that is used in the original
                            request.
                        type: str
                type: dict
            routing_rules:
                description:
                - Specifies the redirect behavior and when a redirect is applied.
                elements: dict
                suboptions:
                    redirect_rule:
                        description:
                        - Container for redirect information.
                        - You can redirect requests to another host, to another page,
                            or with another protocol.
                        - In the event of an error, you can specify a different error
                            code to return.Specifies how requests are redirected.
                        - In the event of an error, you can specify a different error
                            code to return.
                        required: true
                        suboptions:
                            host_name:
                                description:
                                - The host name to use in the redirect request.
                                type: str
                            http_redirect_code:
                                description:
                                - The HTTP redirect code to use on the response.
                                - Not required if one of the siblings is present.
                                type: str
                            protocol:
                                choices:
                                - http
                                - https
                                description:
                                - Protocol to use when redirecting requests.
                                - The default is the protocol that is used in the
                                    original request.
                                type: str
                            replace_key_prefix_with:
                                description:
                                - The object key prefix to use in the redirect request.
                                type: str
                            replace_key_with:
                                description:
                                - The specific object key to use in the redirect request.d
                                type: str
                        type: dict
                    routing_rule_condition:
                        description:
                        - A container for describing a condition that must be met
                            for the specified redirect to apply.You must specify at
                            least one of I(http_error_code_returned_equals) and I(key_prefix_equals)
                        suboptions:
                            http_error_code_returned_equals:
                                description:
                                - The HTTP error code when the redirect is applied.
                                type: str
                            key_prefix_equals:
                                description:
                                - The object key name prefix when the redirect is
                                    applied.
                                type: str
                        type: dict
                type: list
        type: dict
author: Ansible Cloud Team (@ansible-collections)
version_added: 0.1.0
requirements: []
extends_documentation_fragment:
- amazon.cloud.aws
- amazon.cloud.ec2
"""

EXAMPLES = r"""
"""

RETURN = r"""
result:
    description: Dictionary containing resource information.
    returned: always
    type: complex
    contains:
        identifier:
            description: The unique identifier of the resource.
            type: str
        properties:
            description: The resource properties.
            type: dict
"""

import json

from ansible_collections.amazon.aws.plugins.module_utils.core import AnsibleAWSModule
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    CloudControlResource,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    snake_dict_to_camel_dict,
)
from ansible_collections.amazon.cloud.plugins.module_utils.core import (
    ansible_dict_to_boto3_tag_list,
)


def main():

    argument_spec = dict(
        state=dict(
            type="str",
            choices=["present", "absent", "list", "describe", "get"],
            default="present",
        ),
    )

    argument_spec["accelerate_configuration"] = {
        "type": "dict",
        "options": {
            "acceleration_status": {
                "type": "str",
                "choices": ["Enabled", "Suspended"],
                "required": True,
            }
        },
    }
    argument_spec["access_control"] = {
        "type": "str",
        "choices": [
            "AuthenticatedRead",
            "AwsExecRead",
            "BucketOwnerFullControl",
            "BucketOwnerRead",
            "LogDeliveryWrite",
            "Private",
            "PublicRead",
            "PublicReadWrite",
        ],
    }
    argument_spec["analytics_configurations"] = {
        "type": "list",
        "elements": "dict",
        "options": {
            "tag_filters": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "value": {"type": "str", "required": True},
                    "key": {"type": "str", "required": True},
                },
            },
            "storage_class_analysis": {
                "type": "dict",
                "options": {
                    "data_export": {
                        "type": "dict",
                        "options": {
                            "destination": {
                                "type": "dict",
                                "required": True,
                                "options": {
                                    "bucket_arn": {"type": "str"},
                                    "bucket_account_id": {"type": "str"},
                                    "format": {
                                        "type": "str",
                                        "choices": ["CSV", "ORC", "Parquet"],
                                    },
                                    "prefix": {"type": "str"},
                                },
                            },
                            "output_schema_version": {"type": "str", "default": "V_1"},
                        },
                    }
                },
                "required": True,
            },
            "id": {"type": "str", "required": True},
            "prefix": {"type": "str"},
        },
    }
    argument_spec["bucket_encryption"] = {
        "type": "dict",
        "options": {
            "server_side_encryption_configuration": {
                "type": "list",
                "required": True,
                "elements": "dict",
                "options": {
                    "bucket_key_enabled": {"type": "bool"},
                    "server_side_encryption_by_default": {
                        "type": "dict",
                        "options": {
                            "kms_master_key_id": {"type": "str"},
                            "sse_algorithm": {
                                "type": "str",
                                "choices": ["AES256", "aws:kms"],
                                "required": True,
                            },
                        },
                    },
                },
            }
        },
    }
    argument_spec["bucket_name"] = {"type": "str"}
    argument_spec["cors_configuration"] = {
        "type": "dict",
        "options": {
            "cors_rules": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "allowed_headers": {"type": "list", "elements": "str"},
                    "allowed_methods": {
                        "type": "list",
                        "required": True,
                        "elements": "str",
                        "choices": ["DELETE", "GET", "HEAD", "POST", "PUT"],
                    },
                    "allowed_origins": {
                        "type": "list",
                        "required": True,
                        "elements": "str",
                    },
                    "exposed_headers": {"type": "list", "elements": "str"},
                    "id": {"type": "str"},
                    "max_age": {"type": "int"},
                },
            }
        },
    }
    argument_spec["intelligent_tiering_configurations"] = {
        "type": "list",
        "elements": "dict",
        "options": {
            "id": {"type": "str", "required": True},
            "prefix": {"type": "str"},
            "status": {
                "type": "str",
                "choices": ["Disabled", "Enabled"],
                "required": True,
            },
            "tag_filters": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "value": {"type": "str", "required": True},
                    "key": {"type": "str", "required": True},
                },
            },
            "tierings": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "access_tier": {
                        "type": "str",
                        "choices": ["ARCHIVE_ACCESS", "DEEP_ARCHIVE_ACCESS"],
                        "required": True,
                    },
                    "days": {"type": "int", "required": True},
                },
            },
        },
    }
    argument_spec["inventory_configurations"] = {
        "type": "list",
        "elements": "dict",
        "options": {
            "destination": {
                "type": "dict",
                "required": True,
                "options": {
                    "bucket_arn": {"type": "str"},
                    "bucket_account_id": {"type": "str"},
                    "format": {"type": "str", "choices": ["CSV", "ORC", "Parquet"]},
                    "prefix": {"type": "str"},
                },
            },
            "enabled": {"type": "bool", "required": True},
            "id": {"type": "str", "required": True},
            "included_object_versions": {
                "type": "str",
                "choices": ["All", "Current"],
                "required": True,
            },
            "optional_fields": {
                "type": "list",
                "elements": "str",
                "choices": [
                    "BucketKeyStatus",
                    "ETag",
                    "EncryptionStatus",
                    "IntelligentTieringAccessTier",
                    "IsMultipartUploaded",
                    "LastModifiedDate",
                    "ObjectLockLegalHoldStatus",
                    "ObjectLockMode",
                    "ObjectLockRetainUntilDate",
                    "ReplicationStatus",
                    "Size",
                    "StorageClass",
                ],
            },
            "prefix": {"type": "str"},
            "schedule_frequency": {
                "type": "str",
                "choices": ["Daily", "Weekly"],
                "required": True,
            },
        },
    }
    argument_spec["lifecycle_configuration"] = {
        "type": "dict",
        "options": {
            "rules": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "abort_incomplete_multipart_upload": {
                        "type": "dict",
                        "options": {
                            "days_after_initiation": {"type": "int", "required": True}
                        },
                    },
                    "expiration_date": {"type": "str"},
                    "expiration_in_days": {"type": "int"},
                    "expired_object_delete_marker": {"type": "bool"},
                    "id": {"type": "str"},
                    "noncurrent_version_expiration_in_days": {"type": "int"},
                    "noncurrent_version_expiration": {
                        "type": "dict",
                        "options": {
                            "noncurrent_days": {"type": "int", "required": True},
                            "newer_noncurrent_versions": {"type": "int"},
                        },
                    },
                    "noncurrent_version_transition": {
                        "type": "dict",
                        "options": {
                            "storage_class": {
                                "type": "str",
                                "choices": [
                                    "DEEP_ARCHIVE",
                                    "GLACIER",
                                    "GLACIER_IR",
                                    "Glacier",
                                    "INTELLIGENT_TIERING",
                                    "ONEZONE_IA",
                                    "STANDARD_IA",
                                ],
                                "required": True,
                            },
                            "transition_in_days": {"type": "int", "required": True},
                            "newer_noncurrent_versions": {"type": "int"},
                        },
                    },
                    "noncurrent_version_transitions": {
                        "type": "list",
                        "elements": "dict",
                        "options": {
                            "storage_class": {
                                "type": "str",
                                "choices": [
                                    "DEEP_ARCHIVE",
                                    "GLACIER",
                                    "GLACIER_IR",
                                    "Glacier",
                                    "INTELLIGENT_TIERING",
                                    "ONEZONE_IA",
                                    "STANDARD_IA",
                                ],
                                "required": True,
                            },
                            "transition_in_days": {"type": "int", "required": True},
                            "newer_noncurrent_versions": {"type": "int"},
                        },
                    },
                    "prefix": {"type": "str"},
                    "status": {
                        "type": "str",
                        "choices": ["Disabled", "Enabled"],
                        "required": True,
                    },
                    "tag_filters": {
                        "type": "list",
                        "elements": "dict",
                        "options": {
                            "value": {"type": "str", "required": True},
                            "key": {"type": "str", "required": True},
                        },
                    },
                    "object_size_greater_than": {"type": "str"},
                    "object_size_less_than": {"type": "str"},
                    "transition": {
                        "type": "dict",
                        "options": {
                            "storage_class": {
                                "type": "str",
                                "choices": [
                                    "DEEP_ARCHIVE",
                                    "GLACIER",
                                    "GLACIER_IR",
                                    "Glacier",
                                    "INTELLIGENT_TIERING",
                                    "ONEZONE_IA",
                                    "STANDARD_IA",
                                ],
                                "required": True,
                            },
                            "transition_date": {"type": "str"},
                            "transition_in_days": {"type": "int"},
                        },
                    },
                    "transitions": {
                        "type": "list",
                        "elements": "dict",
                        "options": {
                            "storage_class": {
                                "type": "str",
                                "choices": [
                                    "DEEP_ARCHIVE",
                                    "GLACIER",
                                    "GLACIER_IR",
                                    "Glacier",
                                    "INTELLIGENT_TIERING",
                                    "ONEZONE_IA",
                                    "STANDARD_IA",
                                ],
                                "required": True,
                            },
                            "transition_date": {"type": "str"},
                            "transition_in_days": {"type": "int"},
                        },
                    },
                },
            }
        },
    }
    argument_spec["logging_configuration"] = {
        "type": "dict",
        "options": {
            "destination_bucket_name": {"type": "str"},
            "log_file_prefix": {"type": "str"},
        },
    }
    argument_spec["metrics_configurations"] = {
        "type": "list",
        "elements": "dict",
        "options": {
            "access_point_arn": {"type": "str"},
            "id": {"type": "str", "required": True},
            "prefix": {"type": "str"},
            "tag_filters": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "value": {"type": "str", "required": True},
                    "key": {"type": "str", "required": True},
                },
            },
        },
    }
    argument_spec["notification_configuration"] = {
        "type": "dict",
        "options": {
            "event_bridge_configuration": {
                "type": "dict",
                "options": {
                    "event_bridge_enabled": {"type": "bool", "default": "true"}
                },
            },
            "lambda_configurations": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "event": {"type": "str", "required": True},
                    "filter": {
                        "type": "dict",
                        "options": {
                            "s3_key": {
                                "type": "dict",
                                "required": True,
                                "options": {
                                    "rules": {
                                        "type": "list",
                                        "elements": "dict",
                                        "options": {
                                            "name": {"type": "str", "required": True},
                                            "value": {"type": "str", "required": True},
                                        },
                                    }
                                },
                            }
                        },
                    },
                    "function": {"type": "str", "required": True},
                },
            },
            "queue_configurations": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "event": {"type": "str", "required": True},
                    "filter": {
                        "type": "dict",
                        "options": {
                            "s3_key": {
                                "type": "dict",
                                "required": True,
                                "options": {
                                    "rules": {
                                        "type": "list",
                                        "elements": "dict",
                                        "options": {
                                            "name": {"type": "str", "required": True},
                                            "value": {"type": "str", "required": True},
                                        },
                                    }
                                },
                            }
                        },
                    },
                    "queue": {"type": "str", "required": True},
                },
            },
            "topic_configurations": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "event": {"type": "str", "required": True},
                    "filter": {
                        "type": "dict",
                        "options": {
                            "s3_key": {
                                "type": "dict",
                                "required": True,
                                "options": {
                                    "rules": {
                                        "type": "list",
                                        "elements": "dict",
                                        "options": {
                                            "name": {"type": "str", "required": True},
                                            "value": {"type": "str", "required": True},
                                        },
                                    }
                                },
                            }
                        },
                    },
                    "topic": {"type": "str", "required": True},
                },
            },
        },
    }
    argument_spec["object_lock_configuration"] = {
        "type": "dict",
        "options": {
            "object_lock_enabled": {"type": "str", "default": "Enabled"},
            "rule": {
                "type": "dict",
                "options": {
                    "default_retention": {
                        "type": "dict",
                        "options": {
                            "years": {"type": "int"},
                            "days": {"type": "int"},
                            "mode": {
                                "type": "str",
                                "choices": ["COMPLIANCE", "GOVERNANCE"],
                            },
                        },
                    }
                },
            },
        },
    }
    argument_spec["object_lock_enabled"] = {"type": "bool"}
    argument_spec["ownership_controls"] = {
        "type": "dict",
        "options": {
            "rules": {
                "type": "list",
                "required": True,
                "elements": "dict",
                "options": {
                    "object_ownership": {
                        "type": "str",
                        "choices": [
                            "BucketOwnerEnforced",
                            "BucketOwnerPreferred",
                            "ObjectWriter",
                        ],
                    }
                },
            }
        },
    }
    argument_spec["public_access_block_configuration"] = {
        "type": "dict",
        "options": {
            "block_public_acls": {"type": "bool"},
            "block_public_policy": {"type": "bool"},
            "ignore_public_acls": {"type": "bool"},
            "restrict_public_buckets": {"type": "bool"},
        },
    }
    argument_spec["replication_configuration"] = {
        "type": "dict",
        "options": {
            "role": {"type": "str", "required": True},
            "rules": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "delete_marker_replication": {
                        "type": "dict",
                        "options": {
                            "status": {
                                "type": "str",
                                "choices": ["Disabled", "Enabled"],
                            }
                        },
                    },
                    "destination": {
                        "type": "dict",
                        "required": True,
                        "options": {
                            "access_control_translation": {
                                "type": "dict",
                                "options": {
                                    "owner": {"type": "str", "default": "Destination"}
                                },
                            },
                            "account": {"type": "str"},
                            "bucket": {"type": "str"},
                            "encryption_configuration": {
                                "type": "dict",
                                "options": {
                                    "replica_kms_key_id": {
                                        "type": "str",
                                        "required": True,
                                    }
                                },
                            },
                            "metrics": {
                                "type": "dict",
                                "options": {
                                    "event_threshold": {
                                        "type": "dict",
                                        "options": {
                                            "minutes": {"type": "int", "required": True}
                                        },
                                    },
                                    "status": {
                                        "type": "str",
                                        "choices": ["Disabled", "Enabled"],
                                        "required": True,
                                    },
                                },
                            },
                            "replication_time": {
                                "type": "dict",
                                "options": {
                                    "status": {
                                        "type": "str",
                                        "choices": ["Disabled", "Enabled"],
                                        "required": True,
                                    },
                                    "time": {
                                        "type": "dict",
                                        "required": True,
                                        "options": {
                                            "minutes": {"type": "int", "required": True}
                                        },
                                    },
                                },
                            },
                            "storage_class": {
                                "type": "str",
                                "choices": [
                                    "DEEP_ARCHIVE",
                                    "GLACIER",
                                    "GLACIER_IR",
                                    "INTELLIGENT_TIERING",
                                    "ONEZONE_IA",
                                    "REDUCED_REDUNDANCY",
                                    "STANDARD",
                                    "STANDARD_IA",
                                ],
                            },
                        },
                    },
                    "filter": {
                        "type": "dict",
                        "options": {
                            "and": {
                                "type": "dict",
                                "options": {
                                    "prefix": {"type": "str"},
                                    "tag_filters": {
                                        "type": "list",
                                        "elements": "dict",
                                        "options": {
                                            "value": {"type": "str", "required": True},
                                            "key": {"type": "str", "required": True},
                                        },
                                    },
                                },
                            },
                            "prefix": {"type": "str"},
                            "tag_filter": {
                                "type": "dict",
                                "options": {
                                    "value": {"type": "str", "required": True},
                                    "key": {"type": "str", "required": True},
                                },
                            },
                        },
                    },
                    "id": {"type": "str"},
                    "prefix": {"type": "str"},
                    "priority": {"type": "int"},
                    "source_selection_criteria": {
                        "type": "dict",
                        "options": {
                            "replica_modifications": {
                                "type": "dict",
                                "options": {
                                    "status": {
                                        "type": "str",
                                        "choices": ["Disabled", "Enabled"],
                                        "required": True,
                                    }
                                },
                            },
                            "sse_kms_encrypted_objects": {
                                "type": "dict",
                                "options": {
                                    "status": {
                                        "type": "str",
                                        "choices": ["Disabled", "Enabled"],
                                        "required": True,
                                    }
                                },
                            },
                        },
                    },
                    "status": {
                        "type": "str",
                        "choices": ["Disabled", "Enabled"],
                        "required": True,
                    },
                },
            },
        },
    }
    argument_spec["tags"] = {
        "type": "dict",
        "required": False,
        "aliases": ["resource_tags"],
    }
    argument_spec["versioning_configuration"] = {
        "type": "dict",
        "options": {
            "status": {
                "type": "str",
                "default": "Suspended",
                "choices": ["Enabled", "Suspended"],
            }
        },
    }
    argument_spec["website_configuration"] = {
        "type": "dict",
        "options": {
            "error_document": {"type": "str"},
            "index_document": {"type": "str"},
            "routing_rules": {
                "type": "list",
                "elements": "dict",
                "options": {
                    "redirect_rule": {
                        "type": "dict",
                        "options": {
                            "host_name": {"type": "str"},
                            "http_redirect_code": {"type": "str"},
                            "protocol": {"type": "str", "choices": ["http", "https"]},
                            "replace_key_prefix_with": {"type": "str"},
                            "replace_key_with": {"type": "str"},
                        },
                        "required": True,
                    },
                    "routing_rule_condition": {
                        "type": "dict",
                        "options": {
                            "key_prefix_equals": {"type": "str"},
                            "http_error_code_returned_equals": {"type": "str"},
                        },
                    },
                },
            },
            "redirect_all_requests_to": {
                "type": "dict",
                "options": {
                    "host_name": {"type": "str", "required": True},
                    "protocol": {"type": "str", "choices": ["http", "https"]},
                },
            },
        },
    }
    argument_spec["state"] = {
        "type": "str",
        "choices": ["present", "absent", "list", "describe", "get"],
        "default": "present",
    }
    argument_spec["wait"] = {"type": "bool", "default": False}
    argument_spec["wait_timeout"] = {"type": "int", "default": 320}
    argument_spec["purge_tags"] = {"type": "bool", "required": False, "default": True}

    required_if = [
        ["state", "create", ["bucket_name"], True],
        ["state", "update", ["bucket_name"], True],
        ["state", "delete", ["bucket_name"], True],
        ["state", "get", ["bucket_name"], True],
    ]

    module = AnsibleAWSModule(
        argument_spec=argument_spec, required_if=required_if, supports_check_mode=True
    )
    cloud = CloudControlResource(module)

    type_name = "AWS::S3::Bucket"

    params = {}

    params["accelerate_configuration"] = module.params.get("accelerate_configuration")
    params["access_control"] = module.params.get("access_control")
    params["analytics_configurations"] = module.params.get("analytics_configurations")
    params["bucket_encryption"] = module.params.get("bucket_encryption")
    params["bucket_name"] = module.params.get("bucket_name")
    params["cors_configuration"] = module.params.get("cors_configuration")
    params["intelligent_tiering_configurations"] = module.params.get(
        "intelligent_tiering_configurations"
    )
    params["inventory_configurations"] = module.params.get("inventory_configurations")
    params["lifecycle_configuration"] = module.params.get("lifecycle_configuration")
    params["logging_configuration"] = module.params.get("logging_configuration")
    params["metrics_configurations"] = module.params.get("metrics_configurations")
    params["notification_configuration"] = module.params.get(
        "notification_configuration"
    )
    params["object_lock_configuration"] = module.params.get("object_lock_configuration")
    params["object_lock_enabled"] = module.params.get("object_lock_enabled")
    params["ownership_controls"] = module.params.get("ownership_controls")
    params["public_access_block_configuration"] = module.params.get(
        "public_access_block_configuration"
    )
    params["replication_configuration"] = module.params.get("replication_configuration")
    params["tags"] = module.params.get("tags")
    params["versioning_configuration"] = module.params.get("versioning_configuration")
    params["website_configuration"] = module.params.get("website_configuration")

    # The DesiredState we pass to AWS must be a JSONArray of non-null values
    _params_to_set = {k: v for k, v in params.items() if v is not None}

    # Only if resource is taggable
    if module.params.get("tags", None):
        _params_to_set["tags"] = ansible_dict_to_boto3_tag_list(module.params["tags"])

    params_to_set = snake_dict_to_camel_dict(_params_to_set, capitalize_first=True)

    # Ignore createOnlyProperties that can be set only during resource creation
    create_only_params = ["bucket_name", "object_lock_enabled"]

    state = module.params.get("state")
    identifier = module.params.get("bucket_name")

    results = {"changed": False, "result": []}

    if state == "list":
        results["result"] = cloud.list_resources(type_name)

    if state in ("describe", "get"):
        results["result"] = cloud.get_resource(type_name, identifier)

    if state == "present":
        results["changed"] |= cloud.present(
            type_name, identifier, params_to_set, create_only_params
        )
        results["result"] = cloud.get_resource(type_name, identifier)

    if state == "absent":
        results["changed"] |= cloud.absent(type_name, identifier)

    module.exit_json(**results)


if __name__ == "__main__":
    main()
